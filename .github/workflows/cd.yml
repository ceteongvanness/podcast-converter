name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches: [main, develop]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: dummy-for-build
  AWS_SECRET_ACCESS_KEY: dummy-for-build

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      image_tag: ${{ steps.tag.outputs.tag }}
    
    steps:
    - uses: actions/checkout@v4

    - name: Generate deployment tag
      id: tag
      run: |
        echo "tag=$(date +'%Y%m%d')_${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        build-args: |
          AWS_REGION=${{ env.AWS_REGION }}
          AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }}

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: development
      url: https://dev.your-app-url.com
    
    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name podcast-converter-cluster --region ${{ env.AWS_REGION }}

    - name: Save current deployment state
      run: |
        kubectl get deployment podcast-converter -n podcast-converter-dev -o yaml > previous_deployment.yaml || true

    - name: Deploy to development
      run: |
        kubectl apply -f k8s/base/config/ -n podcast-converter-dev
        kubectl apply -f k8s/base/deployments/ -n podcast-converter-dev
        kubectl apply -f k8s/base/services/ -n podcast-converter-dev
        kubectl apply -f k8s/base/ingress/ -n podcast-converter-dev

    - name: Verify deployment
      run: |
        kubectl rollout status deployment/podcast-converter -n podcast-converter-dev --timeout=300s

    - name: Rollback on failure
      if: failure()
      run: |
        echo "Deployment failed, initiating rollback..."
        kubectl apply -f previous_deployment.yaml
        kubectl rollout status deployment/podcast-converter -n podcast-converter-dev --timeout=300s

  deploy-staging:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://staging.your-app-url.com
    
    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name podcast-converter-cluster --region ${{ env.AWS_REGION }}

    - name: Deploy to staging
      run: |
        kubectl apply -f k8s/base/config/
        kubectl apply -f k8s/base/deployments/
        kubectl apply -f k8s/base/services/
        kubectl apply -f k8s/base/ingress/

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://your-app-url.com
    
    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name podcast-converter-cluster --region ${{ env.AWS_REGION }}

    - name: Deploy to production
      run: |
        kubectl apply -f k8s/base/config/
        kubectl apply -f k8s/base/deployments/
        kubectl apply -f k8s/base/services/
        kubectl apply -f k8s/base/ingress/